
import { useState } from "react";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from "@/components/ui/card";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { FileText, Image, Upload, X } from "lucide-react";
import { toast } from "sonner";
import { Textarea } from "@/components/ui/textarea";
import { Input } from "@/components/ui/input";

const FakeDetection = () => {
  const [selectedTab, setSelectedTab] = useState("image");
  const [image, setImage] = useState<File | null>(null);
  const [imagePreview, setImagePreview] = useState<string | null>(null);
  const [text, setText] = useState("");
  const [analyzing, setAnalyzing] = useState(false);
  const [result, setResult] = useState<{
    score: number;
    verdict: string;
    details: string;
  } | null>(null);

  const handleImageChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    if (e.target.files && e.target.files[0]) {
      const file = e.target.files[0];
      setImage(file);
      const reader = new FileReader();
      reader.onload = (e) => {
        setImagePreview(e.target?.result as string);
      };
      reader.readAsDataURL(file);
    }
  };

  const clearImage = () => {
    setImage(null);
    setImagePreview(null);
  };

  const analyzeImage = async () => {
    if (!image) {
      toast.error("Please upload an image first");
      return;
    }

    setAnalyzing(true);
    setResult(null);

    try {
      // TO-DO: Connect to backend for image analysis
      // const formData = new FormData();
      // formData.append('image', image);
      // const response = await analyzeImageAPI(formData);
      
      // Mock response
      setTimeout(() => {
        const mockResult = {
          score: Math.floor(Math.random() * 100),
          verdict: Math.random() > 0.5 ? "Likely Fake" : "Likely Authentic",
          details: "The analysis shows potential manipulation in certain regions of the image. The metadata and pixel patterns suggest possible alteration.",
        };

        setResult(mockResult);
        setAnalyzing(false);
      }, 2000);
    } catch (error) {
      console.error("Error analyzing image:", error);
      toast.error("Failed to analyze the image");
      setAnalyzing(false);
    }
  };

  const analyzeText = async () => {
    if (!text.trim()) {
      toast.error("Please enter some text to analyze");
      return;
    }

    setAnalyzing(true);
    setResult(null);

    try {
      // TO-DO: Connect to backend for text analysis
      // const response = await analyzeTextAPI({ text });
      
      // Mock response
      setTimeout(() => {
        const mockResult = {
          score: Math.floor(Math.random() * 100),
          verdict: Math.random() > 0.5 ? "Potentially Misleading" : "Likely Accurate",
          details: "The text contains language patterns typically found in misleading content. Several factual inconsistencies were detected when cross-referenced with reliable sources.",
        };

        setResult(mockResult);
        setAnalyzing(false);
      }, 2000);
    } catch (error) {
      console.error("Error analyzing text:", error);
      toast.error("Failed to analyze the text");
      setAnalyzing(false);
    }
  };

  return (
    <div className="container py-10">
      <div className="mb-8">
        <h1 className="text-3xl font-bold tracking-tight mb-2">Fake Content Detection</h1>
        <p className="text-muted-foreground">
          Detect fake or manipulated content in images or text using our advanced AI analysis.
        </p>
      </div>

      <Tabs defaultValue="image" value={selectedTab} onValueChange={setSelectedTab}>
        <TabsList className="grid w-full grid-cols-2 mb-8">
          <TabsTrigger value="image" className="flex items-center gap-2">
            <Image className="h-4 w-4" />
            <span>Image Analysis</span>
          </TabsTrigger>
          <TabsTrigger value="text" className="flex items-center gap-2">
            <FileText className="h-4 w-4" />
            <span>Text Analysis</span>
          </TabsTrigger>
        </TabsList>
        
        <div className="grid md:grid-cols-2 gap-6">
          <div>
            <TabsContent value="image" className="mt-0">
              <Card>
                <CardHeader>
                  <CardTitle>Image Analysis</CardTitle>
                  <CardDescription>
                    Upload an image to detect if it has been manipulated or generated by AI.
                  </CardDescription>
                </CardHeader>
                <CardContent>
                  {imagePreview ? (
                    <div className="relative mb-4">
                      <img 
                        src={imagePreview} 
                        alt="Uploaded preview" 
                        className="max-h-[300px] w-full object-contain rounded-md border"
                      />
                      <Button
                        variant="destructive"
                        size="icon"
                        className="absolute top-2 right-2 h-8 w-8"
                        onClick={clearImage}
                      >
                        <X className="h-4 w-4" />
                      </Button>
                    </div>
                  ) : (
                    <div className="border-2 border-dashed rounded-md p-8 text-center mb-4">
                      <Upload className="h-8 w-8 mx-auto mb-2 text-muted-foreground" />
                      <p className="mb-2 text-sm font-medium">
                        Drag and drop your image here or click to browse
                      </p>
                      <Input
                        type="file"
                        accept="image/*"
                        className="hidden"
                        id="image-upload"
                        onChange={handleImageChange}
                      />
                      <label htmlFor="image-upload">
                        <Button variant="outline" className="mt-2" asChild>
                          <span>Browse Files</span>
                        </Button>
                      </label>
                    </div>
                  )}
                </CardContent>
                <CardFooter>
                  <Button 
                    onClick={analyzeImage} 
                    disabled={analyzing || !image} 
                    className="w-full bg-[#766be9] hover:bg-[#655bd9]"
                  >
                    {analyzing ? "Analyzing..." : "Analyze Image"}
                  </Button>
                </CardFooter>
              </Card>
            </TabsContent>

            <TabsContent value="text" className="mt-0">
              <Card>
                <CardHeader>
                  <CardTitle>Text Analysis</CardTitle>
                  <CardDescription>
                    Enter text to detect if it contains fake or misleading information.
                  </CardDescription>
                </CardHeader>
                <CardContent>
                  <Textarea
                    placeholder="Paste or type text here to analyze..."
                    value={text}
                    onChange={(e) => setText(e.target.value)}
                    className="h-[250px]"
                  />
                </CardContent>
                <CardFooter>
                  <Button 
                    onClick={analyzeText} 
                    disabled={analyzing || !text.trim()} 
                    className="w-full bg-[#766be9] hover:bg-[#655bd9]"
                  >
                    {analyzing ? "Analyzing..." : "Analyze Text"}
                  </Button>
                </CardFooter>
              </Card>
            </TabsContent>
          </div>

          <div>
            <Card className="h-full">
              <CardHeader>
                <CardTitle>Analysis Results</CardTitle>
                <CardDescription>
                  {result ? "Here's what our AI detected" : "Results will appear here after analysis"}
                </CardDescription>
              </CardHeader>
              <CardContent>
                {analyzing ? (
                  <div className="h-[300px] flex flex-col items-center justify-center">
                    <div className="w-10 h-10 border-4 border-primary border-t-transparent rounded-full animate-spin mb-4"></div>
                    <p className="text-muted-foreground">Analyzing content...</p>
                  </div>
                ) : result ? (
                  <div className="space-y-6">
                    <div className="flex flex-col items-center">
                      <div className="relative w-48 h-48 mb-4">
                        {/* Circular progress indicator */}
                        <svg className="w-full h-full" viewBox="0 0 100 100">
                          <circle
                            className="text-muted stroke-2 fill-none"
                            cx="50"
                            cy="50"
                            r="40"
                            pathLength="100"
                          ></circle>
                          <circle
                            className={`${
                              result.score > 70
                                ? "text-red-500"
                                : result.score > 40
                                ? "text-yellow-500"
                                : "text-green-500"
                            } stroke-2 fill-none`}
                            cx="50"
                            cy="50"
                            r="40"
                            pathLength="100"
                            strokeDasharray="100"
                            strokeDashoffset={100 - result.score}
                            strokeLinecap="round"
                          ></circle>
                        </svg>
                        <div className="absolute inset-0 flex flex-col items-center justify-center text-center">
                          <span className="text-4xl font-bold">{result.score}%</span>
                          <span className="text-sm text-muted-foreground">Fake probability</span>
                        </div>
                      </div>
                      <div className="text-center">
                        <h3 className="text-xl font-semibold mb-1">Verdict: {result.verdict}</h3>
                        <p className="text-muted-foreground text-sm">{result.details}</p>
                      </div>
                    </div>

                    <div className="p-4 bg-muted/50 rounded-md">
                      <h4 className="font-medium mb-2">What does this mean?</h4>
                      <ul className="text-sm space-y-1">
                        <li>• 0-30%: Content is likely authentic</li>
                        <li>• 30-70%: Some elements may be manipulated</li>
                        <li>• 70-100%: High probability of fake content</li>
                      </ul>
                    </div>
                  </div>
                ) : (
                  <div className="h-[300px] flex flex-col items-center justify-center text-center">
                    <div className="w-16 h-16 rounded-full bg-muted flex items-center justify-center mb-4">
                      {selectedTab === "image" ? (
                        <Image className="h-8 w-8 text-muted-foreground" />
                      ) : (
                        <FileText className="h-8 w-8 text-muted-foreground" />
                      )}
                    </div>
                    <h3 className="text-xl font-medium mb-2">No Results Yet</h3>
                    <p className="text-muted-foreground text-sm max-w-xs">
                      Upload an {selectedTab === "image" ? "image" : "text"} and click analyze to see AI-powered detection results.
                    </p>
                  </div>
                )}
              </CardContent>
            </Card>
          </div>
        </div>
      </Tabs>
    </div>
  );
};

export default FakeDetection;
